% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/npn_truncation.R
\name{reverse_npn_truncation}
\alias{reverse_npn_truncation}
\title{Reverse NPN (truncation) transformation}
\usage{
reverse_npn_truncation(mat_trans, parameters = NULL, na = "refuse")
}
\arguments{
\item{mat_trans}{Transformed matrix}

\item{parameters}{Parameters of the transformation}

\item{na}{How to treat NAs in input}
}
\value{
The matrix before transformation
}
\description{
Compute the reverse of the nonparanormal transformation (with truncation)
Note that, if the matrix to be reverse transformed has close to the limits of the reference parameters, they will be clipped.
}
\section{NA handling}{


The \code{na} argument specifies what to do when there are \code{NA} in the input matrix.
The default is "refuse": the function stops with an error; a suitable way
to deal with it is to remove \code{NA}s (e.g. by imputation) before passing the matrix
to the transformation. Other options incluse "keep", so the transformed matrix contains
\code{NA} where the input matrix did, "center" which gives an "average" value to the \code{NA}s,
or "last" which gives the highest possible value to the \code{NA}s (which is the default
behavior in the \code{{huge}} package).
}

\examples{
# Reverse a previous transformation
my_mat <- matrix(rnorm(6, 10, 1), ncol = 2)
transformed_mat <- transform_npn_shrinkage(my_mat)
reverse_npn_truncation(transformed_mat$mat, transformed_mat$parameters)

# Given a matrix in NPN scale, project it back onto original scale
y <- matrix(c(-1, 1), ncol = 1)
reverse_npn_truncation(y, transformed_mat$parameters)
}
