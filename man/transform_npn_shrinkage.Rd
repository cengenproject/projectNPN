% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/npn_shrinkage.R
\name{transform_npn_shrinkage}
\alias{transform_npn_shrinkage}
\title{Transformation NPN by shrunken ECDF}
\usage{
transform_npn_shrinkage(mat, parameters = NULL)
}
\arguments{
\item{mat}{The matrix to transform.}

\item{parameters}{If \code{NULL}, perform the transformation as \code{huge.npn()}; if not \code{NULL}, reuse the parameters to project \code{mat} onto the same scale.}
}
\value{
A list with two elements: \code{mat_trans} is the transformed matrix, \code{parameters} is a list of parameters that can be reused.
}
\description{
Reimplements \code{huge::huge.npn(npn.func = "shrinkage")}, but returning the parameters.
}
\details{
Note that, if the new matrix has values outside of the reference range, they will be clipped.
}
\examples{
x <- matrix(c(1, 12, 20.5), ncol = 1)
y <- matrix(c(12.2, 18), ncol = 1)
x_transformed <- transform_npn_shrinkage(x)
y_transformed <- transform_npn_shrinkage(y, x_transformed$parameters)
}
